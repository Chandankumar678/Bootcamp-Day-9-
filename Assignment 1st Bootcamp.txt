#include <stdio.h>
#include <stdlib.h>

#define MAX 5  // Define the maximum size of the stack

int stack[MAX];
int top = -1;  // Initialize the stack to be empty

// Function to check if the stack is full
int isFull() {
    return top == MAX - 1;
}

// Function to check if the stack is empty
int isEmpty() {
    return top == -1;
}

// Function to push an element into the stack
void push(int value) {
    if (isFull()) {
        printf("Stack Overflow! Cannot push %d into the stack.\n", value);
    } else {
        top++;
        stack[top] = value;
        printf("%d pushed into the stack.\n", value);
    }
}

// Function to pop an element from the stack
int pop() {
    if (isEmpty()) {
        printf("Stack Underflow! Cannot pop from the stack.\n");
        return -1;
    } else {
        int value = stack[top];
        top--;
        printf("%d popped from the stack.\n", value);
        return value;
    }
}

// Function to display the elements of the stack
void display() {
    if (isEmpty()) {
        printf("The stack is empty.\n");
    } else {
        printf("Stack elements are: ");
        for (int i = 0; i <= top; i++) {
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
}

int main() {
    // Example usage
    push(10);
    push(20);
    push(30);
    display();  // Should display 10, 20, 30

    pop();
    display();  // Should display 10, 20

    push(40);
    display();  // Should display 10, 20, 40

    return 0;
}
