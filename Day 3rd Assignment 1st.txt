#include <stdio.h>
#include <stdlib.h>

#define MAX 5  // Define the maximum size of the circular queue

int circularQueue[MAX];
int front = -1, rear = -1;

// Function to check if the circular queue is empty
int isEmpty() {
    return front == -1;
}

// Function to check if the circular queue is full
int isFull() {
    return (rear + 1) % MAX == front;
}

// Function to add an element to the circular queue (Enqueue)
void enqueue(int value) {
    if (isFull()) {
        printf("Circular Queue is full! Cannot enqueue %d.\n", value);
    } else {
        if (isEmpty()) {
            front = rear = 0;
        } else {
            rear = (rear + 1) % MAX;
        }
        circularQueue[rear] = value;
        printf("%d enqueued into the circular queue.\n", value);
    }
}

// Function to remove an element from the circular queue (Dequeue)
int dequeue() {
    if (isEmpty()) {
        printf("Circular Queue is empty! Cannot dequeue.\n");
        return -1;
    } else {
        int value = circularQueue[front];
        if (front == rear) {
            front = rear = -1;  // Queue becomes empty
        } else {
            front = (front + 1) % MAX;
        }
        printf("%d dequeued from the circular queue.\n", value);
        return value;
    }
}

// Function to display the elements of the circular queue
void display() {
    if (isEmpty()) {
        printf("Circular Queue is empty.\n");
    } else {
        printf("Circular Queue elements are: ");
        int i = front;
        while (i != rear) {
            printf("%d ", circularQueue[i]);
            i = (i + 1) % MAX;
        }
        printf("%d\n", circularQueue[rear]);
    }
}

int main() {
    int choice, value;

    while (1) {
        printf("\nCircular Queue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to enqueue: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting the program.\n");
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
